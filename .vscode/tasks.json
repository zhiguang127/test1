{
    "version": "2.0.0",
    "tasks": [
        { // 这个大括号里是‘构建（build）’任务
            "label": "build", // 任务名称，与launch.json的preLaunchTask相对应
            "command": "g++", // 要使用的编译器，C++用g++
            "args": [
                "${file}", // 指定要编译的是当前文件
                "-o", // 指定输出文件名，不加该参数则默认输出a.exe，Linux下默认a.out
                "${fileDirname}/bin/${fileBasenameNoExtension}.exe",
                "-g", // 生成和调试有关的信息
                "-m64", // 不知为何有时会生成16位程序而无法运行，此条可强制生成64位的
                "-Wall", // 开启额外警告
                "-static-libgcc", // 静态链接libgcc，一般都会加上
                "-fexec-charset=GBK", // 生成的程序使用GBK编码，不加这条会导致Win下输出中文乱码；繁体系统改成BIG5
                "-std=c11", // 语言标准，可根据自己的需要进行修改，写c++要换成c++的语言标准，比如c++11
                "-D__USE_MINGW_ANSI_STDIO" // 用MinGW写C时留着，否则不需要，用于支持printf的%zd和%Lf等
            ], // 编译的命令，其实相当于VSC帮你在终端中输了这些东西
            "type": "process", // process是把预定义变量和转义解析后直接全部传给command；shell相当于先打开shell再输入命令，所以args还会经过shell再解析一遍
            "group": { // 表示‘组’，我们可以有很多的task，然后把他们放在一个‘组’里
                "kind": "build",
                "isDefault": true // 不为true时ctrl shift B就要手动选择了
            },
            "presentation": {
                "echo": true, // 表示在执行任务时在终端要有输出
                "reveal": "always", // 执行任务时是否跳转到终端面板，可以为always，silent，never。具体参见VSC的文档，即使设为never，手动点进去还是可以看到
                "focus": false, // 设为true后可以使执行task时焦点聚集在终端，但对编译C/C++来说，设为true没有意义
                "panel": "shared" // 不同的文件的编译信息共享一个终端面板
            },
            "problemMatcher": "$gcc" // 捕捉编译时终端里的报错信息到问题面板中，修改代码后需要重新编译才会再次触发
            // 本来有Lint，再开problemMatcher就有双重报错，但MinGW的Lint效果实在太差了；用Clangd可以注释掉
        },
        { // 这个大括号里是‘运行(run)’任务，一些设置与上面的构建任务性质相同
            "label": "run", 
            "type": "shell", 
            "dependsOn": "build", // 任务依赖，因为要运行必须先构建，所以执行这个任务前必须先执行build任务，
            "command": "${fileDirname}/bin/${fileBasenameNoExtension}.exe", // 执行exe文件，只需要指定这个exe文件在哪里就好
            "group": {
                "kind": "test", // 这一组是‘测试’组，将run任务放在test组里方便我们用快捷键执行
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true, // 这个就设置为true了，运行任务后将焦点聚集到终端，方便进行输入
                "panel": "shared"
            }
        }
    ]
}